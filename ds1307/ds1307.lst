
AVRASM ver. 2.1.30  D:\Projects AVR\ds1307\ds1307.asm Wed Oct 22 19:55:31 2014

D:\Projects AVR\ds1307\ds1307.asm(1070): warning: Register r5 already defined by the .DEF directive
D:\Projects AVR\ds1307\ds1307.asm(1071): warning: Register r4 already defined by the .DEF directive
D:\Projects AVR\ds1307\ds1307.asm(1072): warning: Register r7 already defined by the .DEF directive
D:\Projects AVR\ds1307\ds1307.asm(1073): warning: Register r6 already defined by the .DEF directive
D:\Projects AVR\ds1307\ds1307.asm(1074): warning: Register r9 already defined by the .DEF directive
D:\Projects AVR\ds1307\ds1307.asm(1075): warning: Register r8 already defined by the .DEF directive
D:\Projects AVR\ds1307\ds1307.asm(1076): warning: Register r11 already defined by the .DEF directive
D:\Projects AVR\ds1307\ds1307.asm(1077): warning: Register r10 already defined by the .DEF directive
D:\Projects AVR\ds1307\ds1307.asm(1078): warning: Register r13 already defined by the .DEF directive
D:\Projects AVR\ds1307\ds1307.asm(1079): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega8
                 ;Program type             : Application
                 ;Clock frequency          : 8,000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : No
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _hour=R5
                 	.DEF _min=R4
                 	.DEF _sek=R7
                 	.DEF _day=R6
                 	.DEF _month=R9
                 	.DEF _year=R8
                 	.DEF _week_day=R11
                 	.DEF _menu=R10
                 	.DEF __lcd_x=R13
                 	.DEF __lcd_y=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c022      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 c04f      	RJMP _ext_int1_isr
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000013 0000      	.DW  0x0000
                 
                 _0x9:
000014 0000
000015 0000
000016 0000
000017 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x2020003:
000018 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000019 0001      	.DW  0x01
00001a 0002      	.DW  0x02
00001b 0026      	.DW  __REG_BIT_VARS*2
                 
00001c 0008      	.DW  0x08
00001d 0004      	.DW  0x04
00001e 0028      	.DW  _0x9*2
                 
00001f 0002      	.DW  0x02
000020 0160      	.DW  __base_y_G101
000021 0030      	.DW  _0x2020003*2
                 
                 _0xFFFFFFFF:
000022 0000      	.DW  0
                 
                 __RESET:
000023 94f8      	CLI
000024 27ee      	CLR  R30
000025 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000026 e0f1      	LDI  R31,1
000027 bffb      	OUT  GICR,R31
000028 bfeb      	OUT  GICR,R30
000029 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
00002a e1f8      	LDI  R31,0x18
00002b bdf1      	OUT  WDTCR,R31
00002c bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00002d e08d      	LDI  R24,(14-2)+1
00002e e0a2      	LDI  R26,2
00002f 27bb      	CLR  R27
                 __CLEAR_REG:
000030 93ed      	ST   X+,R30
000031 958a      	DEC  R24
000032 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000033 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000034 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000035 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000036 93ed      	ST   X+,R30
000037 9701      	SBIW R24,1
000038 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000039 e3e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00003a e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00003b 9185      	LPM  R24,Z+
00003c 9195      	LPM  R25,Z+
00003d 9700      	SBIW R24,0
00003e f061      	BREQ __GLOBAL_INI_END
00003f 91a5      	LPM  R26,Z+
000040 91b5      	LPM  R27,Z+
000041 9005      	LPM  R0,Z+
000042 9015      	LPM  R1,Z+
000043 01bf      	MOVW R22,R30
000044 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000045 9005      	LPM  R0,Z+
000046 920d      	ST   X+,R0
000047 9701      	SBIW R24,1
000048 f7e1      	BRNE __GLOBAL_INI_LOOP
000049 01fb      	MOVW R30,R22
00004a cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00004b e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00004c bfed      	OUT  SPL,R30
00004d e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00004e bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00004f e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000050 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000051 c043      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;
                 ;// I2C Bus functions
                 ;#asm
                    .equ __i2c_port=0x18 ;PORTB
                    .equ __sda_bit=0
                    .equ __scl_bit=1
                 ; 0000 0008 #endasm
                 ;#include <i2c.h>
                 ;
                 ;// DS1307 Real Time Clock functions
                 ;#include <ds1307.h>
                 ;
                 ;// Alphanumeric LCD functions
                 ;#include <alcd.h>
                 ;
                 ;char hour=0,min=0,sek=0,day=0,month=0,year=0,week_day=0;
                 ;bit time_flag=0;
                 ;char menu=0;
                 ;
                 ;// External Interrupt 1 service routine
                 ;interrupt [EXT_INT1] void ext_int1_isr(void)
                 ; 0000 0017 {
                 
                 	.CSEG
                 _ext_int1_isr:
000052 93ea      	ST   -Y,R30
000053 b7ef      	IN   R30,SREG
                 ; 0000 0018  time_flag=1;
000054 9468      	SET
000055 f820      	BLD  R2,0
                 ; 0000 0019 }
000056 bfef      	OUT  SREG,R30
000057 91e9      	LD   R30,Y+
000058 9518      	RETI
                 ;void show_time()
                 ; 0000 001B {
                 _show_time:
                 ; 0000 001C           rtc_get_time(&hour,&min,&sek);
000059 e0e5      	LDI  R30,LOW(5)
00005a e0f0      	LDI  R31,HIGH(5)
00005b d146      	RCALL SUBOPT_0x0
00005c e0e4      	LDI  R30,LOW(4)
00005d e0f0      	LDI  R31,HIGH(4)
00005e d143      	RCALL SUBOPT_0x0
00005f e0a7      	LDI  R26,LOW(7)
000060 e0b0      	LDI  R27,HIGH(7)
000061 d073      	RCALL _rtc_get_time
                 ; 0000 001D           rtc_get_date(&week_day,&day,&month,&year);
000062 e0eb      	LDI  R30,LOW(11)
000063 e0f0      	LDI  R31,HIGH(11)
000064 d13d      	RCALL SUBOPT_0x0
000065 e0e6      	LDI  R30,LOW(6)
000066 e0f0      	LDI  R31,HIGH(6)
000067 d13a      	RCALL SUBOPT_0x0
000068 e0e9      	LDI  R30,LOW(9)
000069 e0f0      	LDI  R31,HIGH(9)
00006a d137      	RCALL SUBOPT_0x0
00006b e0a8      	LDI  R26,LOW(8)
00006c e0b0      	LDI  R27,HIGH(8)
00006d d084      	RCALL _rtc_get_date
                 ; 0000 001E 
                 ; 0000 001F           lcd_gotoxy(5,0);
00006e e0e5      	LDI  R30,LOW(5)
00006f 93ea      	ST   -Y,R30
000070 e0a0      	LDI  R26,LOW(0)
000071 d0c1      	RCALL _lcd_gotoxy
                 ; 0000 0020 
                 ; 0000 0021           lcd_putchar(hour/10+0x30);
000072 2da5      	MOV  R26,R5
000073 d131      	RCALL SUBOPT_0x1
                 ; 0000 0022           lcd_putchar(hour%10+0x30);
000074 2da5      	MOV  R26,R5
000075 d134      	RCALL SUBOPT_0x2
                 ; 0000 0023           lcd_putchar(':');
                 ; 0000 0024           lcd_putchar(min/10+0x30);
000076 2da4      	MOV  R26,R4
000077 d12d      	RCALL SUBOPT_0x1
                 ; 0000 0025           lcd_putchar(min%10+0x30);
000078 2da4      	MOV  R26,R4
000079 d130      	RCALL SUBOPT_0x2
                 ; 0000 0026           lcd_putchar(':');
                 ; 0000 0027           lcd_putchar(sek/10+0x30);
00007a 2da7      	MOV  R26,R7
00007b d129      	RCALL SUBOPT_0x1
                 ; 0000 0028           lcd_putchar(sek%10+0x30);
00007c 2da7      	MOV  R26,R7
00007d d133      	RCALL SUBOPT_0x3
                 ; 0000 0029 
                 ; 0000 002A           lcd_gotoxy(5,1);
00007e e0e5      	LDI  R30,LOW(5)
00007f 93ea      	ST   -Y,R30
000080 e0a1      	LDI  R26,LOW(1)
000081 d0b1      	RCALL _lcd_gotoxy
                 ; 0000 002B           lcd_putchar(day/10+0x30);
000082 2da6      	MOV  R26,R6
000083 d121      	RCALL SUBOPT_0x1
                 ; 0000 002C           lcd_putchar(day%10+0x30);
000084 2da6      	MOV  R26,R6
000085 d12b      	RCALL SUBOPT_0x3
                 ; 0000 002D           lcd_putchar('/');
000086 e2af      	LDI  R26,LOW(47)
000087 d0c2      	RCALL _lcd_putchar
                 ; 0000 002E           lcd_putchar(month/10+0x30);
000088 2da9      	MOV  R26,R9
000089 d11b      	RCALL SUBOPT_0x1
                 ; 0000 002F           lcd_putchar(month%10+0x30);
00008a 2da9      	MOV  R26,R9
00008b d125      	RCALL SUBOPT_0x3
                 ; 0000 0030           lcd_putchar('/');
00008c e2af      	LDI  R26,LOW(47)
00008d d0bc      	RCALL _lcd_putchar
                 ; 0000 0031           lcd_putchar(year/10+0x30);
00008e 2da8      	MOV  R26,R8
00008f d115      	RCALL SUBOPT_0x1
                 ; 0000 0032           lcd_putchar(year%10+0x30);
000090 2da8      	MOV  R26,R8
000091 d11f      	RCALL SUBOPT_0x3
                 ; 0000 0033 
                 ; 0000 0034           time_flag=0;
000092 94e8      	CLT
000093 f820      	BLD  R2,0
                 ; 0000 0035 }
000094 9508      	RET
                 ;
                 ;void main(void)
                 ; 0000 0038 {
                 _main:
                 ; 0000 0039 
                 ; 0000 003A 
                 ; 0000 003B // Port C initialization
                 ; 0000 003C // Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 003D // State6=T State5=T State4=T State3=P State2=P State1=P State0=P
                 ; 0000 003E PORTC=0x0F;
000095 e0ef      	LDI  R30,LOW(15)
000096 bbe5      	OUT  0x15,R30
                 ; 0000 003F DDRC=0x00;
000097 e0e0      	LDI  R30,LOW(0)
000098 bbe4      	OUT  0x14,R30
                 ; 0000 0040 
                 ; 0000 0041 // Port D initialization
                 ; 0000 0042 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0043 // State7=T State6=T State5=T State4=T State3=P State2=T State1=T State0=T
                 ; 0000 0044 PORTD=0x08;
000099 e0e8      	LDI  R30,LOW(8)
00009a bbe2      	OUT  0x12,R30
                 ; 0000 0045 DDRD=0x00;
00009b e0e0      	LDI  R30,LOW(0)
00009c bbe1      	OUT  0x11,R30
                 ; 0000 0046 
                 ; 0000 0047 // I2C Bus initialization
                 ; 0000 0048 i2c_init();
00009d d141      	RCALL _i2c_init
                 ; 0000 0049 
                 ; 0000 004A // DS1307 Real Time Clock initialization
                 ; 0000 004B // Square wave output on pin SQW/OUT: On
                 ; 0000 004C // Square wave frequency: 1Hz
                 ; 0000 004D rtc_init(0,1,0);
00009e e0e0      	LDI  R30,LOW(0)
00009f 93ea      	ST   -Y,R30
0000a0 e0e1      	LDI  R30,LOW(1)
0000a1 93ea      	ST   -Y,R30
0000a2 e0a0      	LDI  R26,LOW(0)
0000a3 d01c      	RCALL _rtc_init
                 ; 0000 004E 
                 ; 0000 004F // External Interrupt(s) initialization
                 ; 0000 0050 // INT0: Off
                 ; 0000 0051 // INT1: On
                 ; 0000 0052 // INT1 Mode: Low level
                 ; 0000 0053 GICR|=0x80;
0000a4 b7eb      	IN   R30,0x3B
0000a5 68e0      	ORI  R30,0x80
0000a6 bfeb      	OUT  0x3B,R30
                 ; 0000 0054 MCUCR=0x00;
0000a7 e0e0      	LDI  R30,LOW(0)
0000a8 bfe5      	OUT  0x35,R30
                 ; 0000 0055 GIFR=0x80;
0000a9 e8e0      	LDI  R30,LOW(128)
0000aa bfea      	OUT  0x3A,R30
                 ; 0000 0056 
                 ; 0000 0057 // LCD module initialization
                 ; 0000 0058 lcd_init(16);
0000ab e1a0      	LDI  R26,LOW(16)
0000ac d0b3      	RCALL _lcd_init
                 ; 0000 0059 rtc_set_time(21,15,0);
0000ad e1e5      	LDI  R30,LOW(21)
0000ae 93ea      	ST   -Y,R30
0000af e0ef      	LDI  R30,LOW(15)
0000b0 93ea      	ST   -Y,R30
0000b1 e0a0      	LDI  R26,LOW(0)
0000b2 d032      	RCALL _rtc_set_time
                 ; 0000 005A rtc_set_date(3,22,10,14);
0000b3 e0e3      	LDI  R30,LOW(3)
0000b4 93ea      	ST   -Y,R30
0000b5 e1e6      	LDI  R30,LOW(22)
0000b6 93ea      	ST   -Y,R30
0000b7 e0ea      	LDI  R30,LOW(10)
0000b8 93ea      	ST   -Y,R30
0000b9 e0ae      	LDI  R26,LOW(14)
0000ba d049      	RCALL _rtc_set_date
                 ; 0000 005B 
                 ; 0000 005C #asm("sei")
0000bb 9478      	sei
                 ; 0000 005D 
                 ; 0000 005E while (1)
                 _0x3:
                 ; 0000 005F       {
                 ; 0000 0060 
                 ; 0000 0061           if((PINC.0==0))
                 ; 0000 0062           {
                 ; 0000 0063             // rtc_set_time(hour+1,0,0);
                 ; 0000 0064           }
                 ; 0000 0065 
                 ; 0000 0066           if(time_flag==1)
0000bc fc20      	SBRC R2,0
                 ; 0000 0067           {
                 ; 0000 0068               show_time();
0000bd df9b      	RCALL _show_time
                 ; 0000 0069           }
                 ; 0000 006A 
                 ; 0000 006B 
                 ; 0000 006C 
                 ; 0000 006D 
                 ; 0000 006E       };
0000be cffd      	RJMP _0x3
                 ; 0000 006F }
                 _0x8:
0000bf cfff      	RJMP _0x8
                 
                 	.CSEG
                 _rtc_init:
0000c0 93aa      	ST   -Y,R26
0000c1 81ea      	LDD  R30,Y+2
0000c2 70e3      	ANDI R30,LOW(0x3)
0000c3 83ea      	STD  Y+2,R30
0000c4 81e9      	LDD  R30,Y+1
0000c5 30e0      	CPI  R30,0
0000c6 f019      	BREQ _0x2000003
0000c7 81ea      	LDD  R30,Y+2
0000c8 61e0      	ORI  R30,0x10
0000c9 83ea      	STD  Y+2,R30
                 _0x2000003:
0000ca 81e8      	LD   R30,Y
0000cb 30e0      	CPI  R30,0
0000cc f019      	BREQ _0x2000004
0000cd 81ea      	LDD  R30,Y+2
0000ce 68e0      	ORI  R30,0x80
0000cf 83ea      	STD  Y+2,R30
                 _0x2000004:
0000d0 d0e5      	RCALL SUBOPT_0x4
0000d1 e0a7      	LDI  R26,LOW(7)
0000d2 d145      	RCALL _i2c_write
0000d3 81aa      	LDD  R26,Y+2
0000d4 c019      	RJMP _0x2060002
                 _rtc_get_time:
0000d5 93ba      	ST   -Y,R27
0000d6 93aa      	ST   -Y,R26
0000d7 d0de      	RCALL SUBOPT_0x4
0000d8 e0a0      	LDI  R26,LOW(0)
0000d9 d0df      	RCALL SUBOPT_0x5
0000da d0e5      	RCALL SUBOPT_0x6
0000db 81a8      	LD   R26,Y
0000dc 81b9      	LDD  R27,Y+1
0000dd d0e4      	RCALL SUBOPT_0x7
0000de d0e7      	RCALL SUBOPT_0x8
0000df 81ac      	LDD  R26,Y+4
0000e0 81bd      	LDD  R27,Y+4+1
0000e1 93ec      	ST   X,R30
0000e2 d110      	RCALL _i2c_stop
0000e3 9626      	ADIW R28,6
0000e4 9508      	RET
                 _rtc_set_time:
0000e5 93aa      	ST   -Y,R26
0000e6 d0cf      	RCALL SUBOPT_0x4
0000e7 e0a0      	LDI  R26,LOW(0)
0000e8 d0e3      	RCALL SUBOPT_0x9
0000e9 81a9      	LDD  R26,Y+1
0000ea d0e6      	RCALL SUBOPT_0xA
0000eb d12c      	RCALL _i2c_write
0000ec 81aa      	LDD  R26,Y+2
0000ed d0e3      	RCALL SUBOPT_0xA
                 _0x2060002:
0000ee d129      	RCALL _i2c_write
0000ef d103      	RCALL _i2c_stop
0000f0 9623      	ADIW R28,3
0000f1 9508      	RET
                 _rtc_get_date:
0000f2 93ba      	ST   -Y,R27
0000f3 93aa      	ST   -Y,R26
0000f4 d0c1      	RCALL SUBOPT_0x4
0000f5 e0a3      	LDI  R26,LOW(3)
0000f6 d0c2      	RCALL SUBOPT_0x5
0000f7 81ae      	LDD  R26,Y+6
0000f8 81bf      	LDD  R27,Y+6+1
0000f9 d0c8      	RCALL SUBOPT_0x7
0000fa 81ac      	LDD  R26,Y+4
0000fb 81bd      	LDD  R27,Y+4+1
0000fc d0c5      	RCALL SUBOPT_0x7
0000fd d0c8      	RCALL SUBOPT_0x8
0000fe 81a8      	LD   R26,Y
0000ff 81b9      	LDD  R27,Y+1
000100 93ec      	ST   X,R30
000101 d0f1      	RCALL _i2c_stop
000102 9628      	ADIW R28,8
000103 9508      	RET
                 _rtc_set_date:
000104 93aa      	ST   -Y,R26
000105 d0b0      	RCALL SUBOPT_0x4
000106 e0a3      	LDI  R26,LOW(3)
000107 d110      	RCALL _i2c_write
000108 81ab      	LDD  R26,Y+3
000109 d10e      	RCALL _i2c_write
00010a 81aa      	LDD  R26,Y+2
00010b d0c5      	RCALL SUBOPT_0xA
00010c d10b      	RCALL _i2c_write
00010d 81a9      	LDD  R26,Y+1
00010e d0c2      	RCALL SUBOPT_0xA
00010f d0bc      	RCALL SUBOPT_0x9
000110 d0e2      	RCALL _i2c_stop
000111 9624      	ADIW R28,4
000112 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
000113 93aa      	ST   -Y,R26
000114 b3e2      	IN   R30,0x12
000115 70ef      	ANDI R30,LOW(0xF)
000116 2fae      	MOV  R26,R30
000117 81e8      	LD   R30,Y
000118 7fe0      	ANDI R30,LOW(0xF0)
000119 2bea      	OR   R30,R26
00011a bbe2      	OUT  0x12,R30
                +
00011b e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
00011c 958a     +DEC R24
00011d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
00011e 9a92      	SBI  0x12,2
                +
00011f e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000120 958a     +DEC R24
000121 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000122 9892      	CBI  0x12,2
                +
000123 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000124 958a     +DEC R24
000125 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000126 c062      	RJMP _0x2060001
                 __lcd_write_data:
000127 93aa      	ST   -Y,R26
000128 81a8      	LD   R26,Y
000129 dfe9      	RCALL __lcd_write_nibble_G101
00012a 81e8          ld    r30,y
00012b 95e2          swap  r30
00012c 83e8          st    y,r30
00012d 81a8      	LD   R26,Y
00012e dfe4      	RCALL __lcd_write_nibble_G101
                +
00012f e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000130 958a     +DEC R24
000131 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000132 c056      	RJMP _0x2060001
                 _lcd_gotoxy:
000133 93aa      	ST   -Y,R26
000134 81e8      	LD   R30,Y
000135 e0f0      	LDI  R31,0
000136 5ae0      	SUBI R30,LOW(-__base_y_G101)
000137 4ffe      	SBCI R31,HIGH(-__base_y_G101)
000138 81e0      	LD   R30,Z
000139 81a9      	LDD  R26,Y+1
00013a 0fae      	ADD  R26,R30
00013b dfeb      	RCALL __lcd_write_data
00013c 80d9      	LDD  R13,Y+1
00013d 80c8      	LDD  R12,Y+0
00013e 9622      	ADIW R28,2
00013f 9508      	RET
                 _lcd_clear:
000140 e0a2      	LDI  R26,LOW(2)
000141 d092      	RCALL SUBOPT_0xB
000142 e0ac      	LDI  R26,LOW(12)
000143 dfe3      	RCALL __lcd_write_data
000144 e0a1      	LDI  R26,LOW(1)
000145 d08e      	RCALL SUBOPT_0xB
000146 e0e0      	LDI  R30,LOW(0)
000147 2ece      	MOV  R12,R30
000148 2ede      	MOV  R13,R30
000149 9508      	RET
                 _lcd_putchar:
00014a 93aa      	ST   -Y,R26
00014b 81a8      	LD   R26,Y
00014c 30aa      	CPI  R26,LOW(0xA)
00014d f021      	BREQ _0x2020005
00014e 91e0 0164 	LDS  R30,__lcd_maxx
000150 16de      	CP   R13,R30
000151 f040      	BRLO _0x2020004
                 _0x2020005:
000152 e0e0      	LDI  R30,LOW(0)
000153 93ea      	ST   -Y,R30
000154 94c3      	INC  R12
000155 2dac      	MOV  R26,R12
000156 dfdc      	RCALL _lcd_gotoxy
000157 81a8      	LD   R26,Y
000158 30aa      	CPI  R26,LOW(0xA)
000159 f179      	BREQ _0x2060001
                 _0x2020004:
00015a 94d3      	INC  R13
00015b 9a90      	SBI  0x12,0
00015c 81a8      	LD   R26,Y
00015d dfc9      	RCALL __lcd_write_data
00015e 9890      	CBI  0x12,0
00015f c029      	RJMP _0x2060001
                 _lcd_init:
000160 93aa      	ST   -Y,R26
000161 b3e1      	IN   R30,0x11
000162 6fe0      	ORI  R30,LOW(0xF0)
000163 bbe1      	OUT  0x11,R30
000164 9a8a      	SBI  0x11,2
000165 9a88      	SBI  0x11,0
000166 9a89      	SBI  0x11,1
000167 9892      	CBI  0x12,2
000168 9890      	CBI  0x12,0
000169 9891      	CBI  0x12,1
00016a 81e8      	LD   R30,Y
00016b 93e0 0164 	STS  __lcd_maxx,R30
00016d 58e0      	SUBI R30,-LOW(128)
                +
00016e 93e0 0162+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
000170 81e8      	LD   R30,Y
000171 54e0      	SUBI R30,-LOW(192)
                +
000172 93e0 0163+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
000174 e1a4      	LDI  R26,LOW(20)
000175 e0b0      	LDI  R27,0
000176 d0b9      	RCALL _delay_ms
000177 d060      	RCALL SUBOPT_0xC
000178 d05f      	RCALL SUBOPT_0xC
000179 d05e      	RCALL SUBOPT_0xC
00017a e2a0      	LDI  R26,LOW(32)
00017b df97      	RCALL __lcd_write_nibble_G101
                +
00017c ec88     +LDI R24 , LOW ( 200 )
00017d e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00017e 9701     +SBIW R24 , 1
00017f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000180 e2a8      	LDI  R26,LOW(40)
000181 dfa5      	RCALL __lcd_write_data
000182 e0a4      	LDI  R26,LOW(4)
000183 dfa3      	RCALL __lcd_write_data
000184 e8a5      	LDI  R26,LOW(133)
000185 dfa1      	RCALL __lcd_write_data
000186 e0a6      	LDI  R26,LOW(6)
000187 df9f      	RCALL __lcd_write_data
000188 dfb7      	RCALL _lcd_clear
                 _0x2060001:
000189 9621      	ADIW R28,1
00018a 9508      	RET
                 
                 	.CSEG
                 _bcd2bin:
00018b 93aa      	ST   -Y,R26
00018c 81e8          ld   r30,y
00018d 95e2          swap r30
00018e 70ef          andi r30,0xf
00018f 2fae          mov  r26,r30
000190 0faa          lsl  r26
000191 0faa          lsl  r26
000192 0fea          add  r30,r26
000193 0fee          lsl  r30
000194 91a9          ld   r26,y+
000195 70af          andi r26,0xf
000196 0fea          add  r30,r26
000197 9508          ret
                 _bin2bcd:
000198 93aa      	ST   -Y,R26
000199 91a9          ld   r26,y+
00019a 27ee          clr  r30
                 bin2bcd0:
00019b 50aa          subi r26,10
00019c f012          brmi bin2bcd1
00019d 5fe0          subi r30,-16
00019e cffc          rjmp bin2bcd0
                 bin2bcd1:
00019f 5fa6          subi r26,-10
0001a0 0fea          add  r30,r26
0001a1 9508          ret
                 
                 	.DSEG
                 __base_y_G101:
000160           	.BYTE 0x4
                 __lcd_maxx:
000164           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x0:
0001a2 93fa      	ST   -Y,R31
0001a3 93ea      	ST   -Y,R30
0001a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x1:
0001a5 e0ea      	LDI  R30,LOW(10)
0001a6 d093      	RCALL __DIVB21U
0001a7 5de0      	SUBI R30,-LOW(48)
0001a8 2fae      	MOV  R26,R30
0001a9 cfa0      	RJMP _lcd_putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2:
0001aa e0ea      	LDI  R30,LOW(10)
0001ab d09c      	RCALL __MODB21U
0001ac 5de0      	SUBI R30,-LOW(48)
0001ad 2fae      	MOV  R26,R30
0001ae df9b      	RCALL _lcd_putchar
0001af e3aa      	LDI  R26,LOW(58)
0001b0 cf99      	RJMP _lcd_putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x3:
0001b1 e0ea      	LDI  R30,LOW(10)
0001b2 d095      	RCALL __MODB21U
0001b3 5de0      	SUBI R30,-LOW(48)
0001b4 2fae      	MOV  R26,R30
0001b5 cf94      	RJMP _lcd_putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x4:
0001b6 d02d      	RCALL _i2c_start
0001b7 eda0      	LDI  R26,LOW(208)
0001b8 c05f      	RJMP _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
0001b9 d05e      	RCALL _i2c_write
0001ba d038      	RCALL _i2c_stop
0001bb d028      	RCALL _i2c_start
0001bc eda1      	LDI  R26,LOW(209)
0001bd d05a      	RCALL _i2c_write
0001be e0a1      	LDI  R26,LOW(1)
0001bf c03d      	RJMP _i2c_read
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
0001c0 2fae      	MOV  R26,R30
0001c1 cfc9      	RJMP _bcd2bin
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x7:
0001c2 93ec      	ST   X,R30
0001c3 e0a1      	LDI  R26,LOW(1)
0001c4 d038      	RCALL _i2c_read
0001c5 cffa      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
0001c6 81aa      	LDD  R26,Y+2
0001c7 81bb      	LDD  R27,Y+2+1
0001c8 93ec      	ST   X,R30
0001c9 e0a0      	LDI  R26,LOW(0)
0001ca d032      	RCALL _i2c_read
0001cb cff4      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x9:
0001cc d04b      	RCALL _i2c_write
0001cd 81a8      	LD   R26,Y
0001ce dfc9      	RCALL _bin2bcd
0001cf 2fae      	MOV  R26,R30
0001d0 c047      	RJMP _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
0001d1 dfc6      	RCALL _bin2bcd
0001d2 2fae      	MOV  R26,R30
0001d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB:
0001d4 df52      	RCALL __lcd_write_data
0001d5 e0a3      	LDI  R26,LOW(3)
0001d6 e0b0      	LDI  R27,0
0001d7 c058      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xC:
0001d8 e3a0      	LDI  R26,LOW(48)
0001d9 df39      	RCALL __lcd_write_nibble_G101
                +
0001da ec88     +LDI R24 , LOW ( 200 )
0001db e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0001dc 9701     +SBIW R24 , 1
0001dd f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0001de 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 
                 _i2c_init:
0001df 98c1      	cbi  __i2c_port,__scl_bit
0001e0 98c0      	cbi  __i2c_port,__sda_bit
0001e1 9ab9      	sbi  __i2c_dir,__scl_bit
0001e2 98b8      	cbi  __i2c_dir,__sda_bit
0001e3 c015      	rjmp __i2c_delay2
                 _i2c_start:
0001e4 98b8      	cbi  __i2c_dir,__sda_bit
0001e5 98b9      	cbi  __i2c_dir,__scl_bit
0001e6 27ee      	clr  r30
0001e7 0000      	nop
0001e8 9bb0      	sbis __i2c_pin,__sda_bit
0001e9 9508      	ret
0001ea 9bb1      	sbis __i2c_pin,__scl_bit
0001eb 9508      	ret
0001ec d004      	rcall __i2c_delay1
0001ed 9ab8      	sbi  __i2c_dir,__sda_bit
0001ee d002      	rcall __i2c_delay1
0001ef 9ab9      	sbi  __i2c_dir,__scl_bit
0001f0 e0e1      	ldi  r30,1
                 __i2c_delay1:
0001f1 e06d      	ldi  r22,13
0001f2 c007      	rjmp __i2c_delay2l
                 _i2c_stop:
0001f3 9ab8      	sbi  __i2c_dir,__sda_bit
0001f4 9ab9      	sbi  __i2c_dir,__scl_bit
0001f5 d003      	rcall __i2c_delay2
0001f6 98b9      	cbi  __i2c_dir,__scl_bit
0001f7 dff9      	rcall __i2c_delay1
0001f8 98b8      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
0001f9 e16b      	ldi  r22,27
                 __i2c_delay2l:
0001fa 956a      	dec  r22
0001fb f7f1      	brne __i2c_delay2l
0001fc 9508      	ret
                 _i2c_read:
0001fd e078      	ldi  r23,8
                 __i2c_read0:
0001fe 98b9      	cbi  __i2c_dir,__scl_bit
0001ff dff1      	rcall __i2c_delay1
                 __i2c_read3:
000200 9bb1      	sbis __i2c_pin,__scl_bit
000201 cffe      	rjmp __i2c_read3
000202 dfee      	rcall __i2c_delay1
000203 9488      	clc
000204 99b0      	sbic __i2c_pin,__sda_bit
000205 9408      	sec
000206 9ab9      	sbi  __i2c_dir,__scl_bit
000207 dff1      	rcall __i2c_delay2
000208 1fee      	rol  r30
000209 957a      	dec  r23
00020a f799      	brne __i2c_read0
00020b 2f7a      	mov  r23,r26
00020c 2377      	tst  r23
00020d f411      	brne __i2c_read1
00020e 98b8      	cbi  __i2c_dir,__sda_bit
00020f c001      	rjmp __i2c_read2
                 __i2c_read1:
000210 9ab8      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
000211 dfdf      	rcall __i2c_delay1
000212 98b9      	cbi  __i2c_dir,__scl_bit
000213 dfe5      	rcall __i2c_delay2
000214 9ab9      	sbi  __i2c_dir,__scl_bit
000215 dfdb      	rcall __i2c_delay1
000216 98b8      	cbi  __i2c_dir,__sda_bit
000217 cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
000218 e078      	ldi  r23,8
                 __i2c_write0:
000219 0faa      	lsl  r26
00021a f410      	brcc __i2c_write1
00021b 98b8      	cbi  __i2c_dir,__sda_bit
00021c c001      	rjmp __i2c_write2
                 __i2c_write1:
00021d 9ab8      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
00021e dfda      	rcall __i2c_delay2
00021f 98b9      	cbi  __i2c_dir,__scl_bit
000220 dfd0      	rcall __i2c_delay1
                 __i2c_write3:
000221 9bb1      	sbis __i2c_pin,__scl_bit
000222 cffe      	rjmp __i2c_write3
000223 dfcd      	rcall __i2c_delay1
000224 9ab9      	sbi  __i2c_dir,__scl_bit
000225 957a      	dec  r23
000226 f791      	brne __i2c_write0
000227 98b8      	cbi  __i2c_dir,__sda_bit
000228 dfc8      	rcall __i2c_delay1
000229 98b9      	cbi  __i2c_dir,__scl_bit
00022a dfce      	rcall __i2c_delay2
00022b e0e1      	ldi  r30,1
00022c 99b0      	sbic __i2c_pin,__sda_bit
00022d 27ee      	clr  r30
00022e 9ab9      	sbi  __i2c_dir,__scl_bit
00022f cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
000230 9610      	adiw r26,0
000231 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000232 ed80     +LDI R24 , LOW ( 0x7D0 )
000233 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000234 9701     +SBIW R24 , 1
000235 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000236 95a8      	wdr
000237 9711      	sbiw r26,1
000238 f7c9      	brne __delay_ms0
                 __delay_ms1:
000239 9508      	ret
                 
                 __DIVB21U:
00023a 2400      	CLR  R0
00023b e098      	LDI  R25,8
                 __DIVB21U1:
00023c 0faa      	LSL  R26
00023d 1c00      	ROL  R0
00023e 1a0e      	SUB  R0,R30
00023f f410      	BRCC __DIVB21U2
000240 0e0e      	ADD  R0,R30
000241 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000242 60a1      	SBR  R26,1
                 __DIVB21U3:
000243 959a      	DEC  R25
000244 f7b9      	BRNE __DIVB21U1
000245 2fea      	MOV  R30,R26
000246 2da0      	MOV  R26,R0
000247 9508      	RET
                 
                 __MODB21U:
000248 dff1      	RCALL __DIVB21U
000249 2fea      	MOV  R30,R26
00024a 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :   9 r1 :   1 r2 :   3 r3 :   0 r4 :   2 r5 :   2 r6 :   2 r7 :   2 
r8 :   2 r9 :   2 r10:   0 r11:   0 r12:   4 r13:   4 r14:   0 r15:   0 
r16:   0 r17:   0 r18:   0 r19:   0 r20:   0 r21:   0 r22:   5 r23:   6 
r24:  21 r25:   7 r26: 110 r27:  14 r28:   7 r29:   1 r30: 137 r31:  13 
x  :   7 y  :  72 z  :   8 
Registers used: 24 out of 35 (68.6%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   5 
adiw  :   7 and   :   0 andi  :   5 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   2 brcs  :   0 break :   0 breq  :   6 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   0 brmi  :   1 brne  :  16 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 cbi   :  20 
cbr   :   0 clc   :   1 clh   :   0 cli   :   1 cln   :   0 clr   :   6 
cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   0 cp    :   1 
cpc   :   0 cpi   :   4 cpse  :   0 dec   :   9 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   4 
inc   :   2 ld    :  19 ldd   :  23 ldi   :  97 lds   :   1 lpm   :   7 
lsl   :   5 lsr   :   0 mov   :  27 movw  :   3 mul   :   0 muls  :   0 
mulsu :   0 neg   :   0 nop   :   1 or    :   1 ori   :   4 out   :  18 
pop   :   0 push  :   0 rcall : 108 ret   :  19 reti  :   1 rjmp  :  47 
rol   :   2 ror   :   0 sbc   :   0 sbci  :   1 sbi   :  16 sbic  :   2 
sbis  :   4 sbiw  :   7 sbr   :   1 sbrc  :   1 sbrs  :   0 sec   :   1 
seh   :   0 sei   :   1 sen   :   0 ser   :   0 ses   :   0 set   :   1 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  35 std   :   3 
sts   :   3 sub   :   1 subi  :   9 swap  :   2 tst   :   1 wdr   :   1 

Instructions used: 54 out of 114 (47.4%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000496   1142     32   1174    8192  14.3%
[.dseg] 0x000060 0x000165      0      5      5    1119   0.4%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 10 warnings
