;//------------------------------------------------------------------------------
;// This is Open source software. You can place this code on your site, but don't
;// forget a link to my YouTube-channel: https://www.youtube.com/channel/UChButpZaL5kUUl_zTyIDFkQ
;// Это программное обеспечение распространяется свободно. Вы можете размещать
;// его на вашем сайте, но не забудьте указать ссылку на мой YouTube-канал
;// "Электроника в объектике" https://www.youtube.com/channel/UChButpZaL5kUUl_zTyIDFkQ
;// Автор: Надыршин Руслан / Nadyrshin Ruslan
;//------------------------------------------------------------------------------
;
;#include <delay.h>
;#include "max7219.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;
;
;
;
;//==============================================================================
;// Процедура инициализирует интерфейс обмена с цепочкой max7219
;//==============================================================================
;void max7219_init(void)
; 0003 0015 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0003 0016     MAX7219_DIN_DDR |= (1 << MAX7219_DIN_PIN);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0003 0017 	MAX7219_CS_DDR |= (1 << MAX7219_CS_PIN);
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0003 0018 	MAX7219_CLK_DDR |= (1 << MAX7219_CLK_PIN);
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0003 0019 
; 0003 001A 	MAX7219_DIN_PORT &= ~(1 << MAX7219_DIN_PIN);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0003 001B 	MAX7219_CS_PORT |= (1 << MAX7219_CS_PIN);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0003 001C 	MAX7219_CLK_PORT &= ~(1 << MAX7219_CLK_PIN);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0003 001D }
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;//==============================================================================
;
;
;//==============================================================================
;// Процедура отправляет команду с данным в один или во все max7219 в цепочке
;//==============================================================================
;void max7219_send(uint8_t MAX_Idx, uint8_t Cmd, uint8_t Data)
; 0003 0025 {
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0003 0026   uint16_t max7219_SpiBuff[MAX7219_NUM];
; 0003 0027   uint16_t Word = Data | ((uint16_t) Cmd << 8);
; 0003 0028   uint8_t i;
; 0003 0029 
; 0003 002A   for (i = 0; i < MAX7219_NUM; i++)
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;	MAX_Idx -> Y+14
;	Cmd -> Y+13
;	Data -> Y+12
;	max7219_SpiBuff -> Y+4
;	Word -> R16,R17
;	i -> R19
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0003 002B   {
; 0003 002C     if (MAX_Idx == 0xFF)  // Нужно записать во все max7219 в цепочке
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0003 002D       max7219_SpiBuff[i] = Word;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0003 002E     else                  // Нужно записать только в один max7219
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0003 002F     {
; 0003 0030       if (i == MAX_Idx)         // Та микросхема max7219, в которую нужно записать команду/данные
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0003 0031         max7219_SpiBuff[i] = Word;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0003 0032       else                      // max7219, которому нет данных на запись
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0003 0033         max7219_SpiBuff[i] = 0x00 | ((uint16_t) MAX7219_CMD_NO_OP << 8);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0003 0034     }
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0003 0035   }
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0003 0036 
; 0003 0037   // Пишем пачку слов во все подключенные max7219
; 0003 0038   max7219_sendarray(max7219_SpiBuff);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0003 0039 }
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;//==============================================================================
;
;
;//==============================================================================
;// Процедура отправляет массив команд в max7219
;//==============================================================================
;void max7219_sendarray(uint16_t *pArray)
; 0003 0041 {
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0003 0042   uint8_t i;
; 0003 0043   MAX7219_CS_LOW();
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;	*pArray -> Y+1
;	i -> R17
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0003 0044   delay_us(2);
;PCODE: $00000060 VOL: 0
; 0003 0045 
; 0003 0046   for (i = 0; i < MAX7219_NUM; i++)
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0003 0047     max7219_send16bit(*(pArray++));
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0003 0049 delay_us(2);
;PCODE: $00000074 VOL: 0
; 0003 004A   MAX7219_CS_HIGHT();
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0003 004B }
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;//==============================================================================
;
;
;//==============================================================================
;// Процедура отправляет 16-битное слово по SPI
;//==============================================================================
;void max7219_send16bit(uint16_t Word)
; 0003 0053 {
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0003 0054     uint8_t i = 0;
; 0003 0055 	uint16_t temp = 0;
; 0003 0056 
; 0003 0057 
; 0003 0058 	while(i<16)
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;	Word -> Y+4
;	i -> R17
;	temp -> R18,R19
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0003 0059 	{
; 0003 005A 		temp = Word;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0003 005B 
; 0003 005C 		if((temp << i) & 0x8000)
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0003 005D 		{
; 0003 005E 			MAX7219_DIN_PORT |= (1 << MAX7219_DIN_PIN);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0003 005F 		}
; 0003 0060 		else
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0003 0061 		{
; 0003 0062 			MAX7219_DIN_PORT &= ~(1 << MAX7219_DIN_PIN);
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0003 0063 		}
;PCODE: $00000095 VOL: 0
; 0003 0064 
; 0003 0065         delay_us(2);
;PCODE: $00000096 VOL: 0
; 0003 0066 		MAX7219_CLK_PORT |= (1 << MAX7219_CLK_PIN);
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0003 0067         delay_us(2);
;PCODE: $00000099 VOL: 0
; 0003 0068 		MAX7219_CLK_PORT &= ~(1 << MAX7219_CLK_PIN);
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0003 0069 
; 0003 006A 		i++;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0003 006B 	}
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0003 006C 
; 0003 006D }
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;//==============================================================================
;
;
;//==============================================================================
;// Процедура устанавливает режим декодирования символов в 1 или во всех max7219
;//==============================================================================
;void max7219_set_decodemode(uint8_t MAX_Idx, uint8_t DecodeMode)
; 0003 0075 {
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0003 0076   max7219_send(MAX_Idx, MAX7219_CMD_DECODE_MODE, DecodeMode);
;PCODE: $000000A6 VOL: 0
;	MAX_Idx -> Y+1
;	DecodeMode -> Y+0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0003 0077 }
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;//==============================================================================
;
;
;//==============================================================================
;// Процедура устанавливает яркость в 1 или во всех max7219
;//==============================================================================
;void max7219_set_intensity(uint8_t MAX_Idx, uint8_t Intensity)
; 0003 007F {
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0003 0080   if (Intensity > 15)
;PCODE: $000000B2 VOL: 0
;	MAX_Idx -> Y+1
;	Intensity -> Y+0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0003 0081     Intensity = 15;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0003 0082 
; 0003 0083   max7219_send(MAX_Idx, MAX7219_CMD_INTENSITY, Intensity);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0003 0084 }
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;//==============================================================================
;
;
;//==============================================================================
;// Процедура устанавливает кол-во знаков/строк в 1 или во всех max7219
;//==============================================================================
;void max7219_set_scan_limit(uint8_t MAX_Idx, uint8_t Limit)
; 0003 008C {
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0003 008D   if (Limit > 7)
;PCODE: $000000C4 VOL: 0
;	MAX_Idx -> Y+1
;	Limit -> Y+0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0003 008E     Limit = 7;
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0003 008F 
; 0003 0090   max7219_send(MAX_Idx, MAX7219_CMD_SCAN_LIMIT, Limit);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0003 0091 }
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;//==============================================================================
;
;
;//==============================================================================
;// Процедура включает/выключает max7219. После подачи питания он выключен
;//==============================================================================
;void max7219_set_run_onoff(uint8_t MAX_Idx, uint8_t On)
; 0003 0099 {
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0003 009A   if (On)
;PCODE: $000000D6 VOL: 0
;	MAX_Idx -> Y+1
;	On -> Y+0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0003 009B     On = 1;
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0003 009C 
; 0003 009D   max7219_send(MAX_Idx, MAX7219_CMD_SHUTDOWN, On);
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0003 009E }
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;//==============================================================================
;
;
;//==============================================================================
;// Процедура включает/выключает тестовый режим max7219 (горят все индикаторы)
;//==============================================================================
;void max7219_set_testmode_onoff(uint8_t MAX_Idx, uint8_t On)
; 0003 00A6 {
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0003 00A7   if (On)
;PCODE: $000000E8 VOL: 0
;	MAX_Idx -> Y+1
;	On -> Y+0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0003 00A8     On = 1;
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0003 00A9 
; 0003 00AA   max7219_send(MAX_Idx, MAX7219_CMD_DISP_TEST, On);
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0003 00AB }
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;//==============================================================================
